openapi: 3.1.0
info:
  title: REC Sizing API
  description: REST API for sizing a Renewable Energy Community (REC). Namely the tool can size additional PV capacity to households, additional storage capacity and even additional "shared" meters with their own PV and storage capacities that are owned by other members of a REC. The tool simulates the operation of the previous and new assets, establishes the optimal transactions in a local energy market (LEM) and provides both the sizig ad the operation strategy outputs. Given the complexity of sizing problems that consider big RECs (i.e., several members) and extensive historical datasets, a more lightweight, clustered version of the problem can be chosen that will provide faster, but less accurate results. The API uses data from two datasets within the ENERSHARE project, Smart Energy Lab (SEL) and IN-DATA, namely real historical net load measurements of several households that have agreed to share their data. Sensitive data, such as the households geographical location and contracts with energy retailers, required for using this tool, was fabricated and can be altered at will in the code of the API itself.
  version: 0.2.1
paths:
  /search_meters_in_area:
    post:
      tags:
        - Search Meter IDs
      summary: Search Meters In Area
      description: Search which meters are located within the geographical circle formed by a point [lat, long] and a radius.
      operationId: search_meters_in_area_search_meters_in_area_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeterByArea'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeterIDs'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /sizing_with_shared_assets:
    post:
      tags:
        - Calculate Sizing
      summary: Compute Sizing With Shared Resources
      description: Perform a sizing MILP where shared assets are considered, i.e., an additional meter ID is included within the REC where a new PV and/or storage asset can be potentially installed.
      operationId: compute_sizing_with_shared_resources_sizing_with_shared_assets_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SizingInputsWithShared'
        required: true
      responses:
        '202':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /sizing_without_shared_assets:
    post:
      tags:
        - Calculate Sizing
      summary: Compute Sizing Without Shared Resources
      description: Perform a sizing MILP where shared assets are not considered, i.e., new installed PV and/or storage capacities are limited to the existing meter IDs within the REC.
      operationId: compute_sizing_without_shared_resources_sizing_without_shared_assets_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SizingInputs'
        required: true
      responses:
        '202':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /get_sizing/{order_id}:
    get:
      tags:
        - Retrieve Sizing Results
      summary: Get Sizing Results
      description: Endpoint for retrieving the sizing results', provided the order ID.
      operationId: get_sizing_results_get_sizing__order_id__get
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: string
            title: Order Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MILPOutputs'
        '202':
          description: Order found but not yet processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderNotProcessed'
        '404':
          description: Order not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderNotFound'
        '412':
          description: One or more meter IDs not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeterIDNotFound'
        '422':
          description: One or more data point for one or more meter IDs not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeseriesDataNotFound'
  /get_clustered_sizing/{order_id}:
    get:
      tags:
        - Retrieve Sizing Results
      summary: Get (Clustered) Sizing Results
      description: Endpoint for retrieving the *clustered* sizing results', provided the order ID.
      operationId: get_clustered_sizing_results_get_clustered_sizing__order_id__get
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: string
            title: Order Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusteredMILPOutputs'
        '202':
          description: Order found but not yet processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderNotProcessed'
        '404':
          description: Order not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderNotFound'
        '412':
          description: One or more meter IDs not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeterIDNotFound'
        '422':
          description: One or more data point for one or more meter IDs not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeseriesDataNotFound'
components:
  schemas:
    AcceptedResponse:
      properties:
        message:
          type: string
          title: Message
          examples:
            - Processing has started. Use the order ID for status updates.
        order_id:
          type: string
          title: Order Id
          description: Order identifier for the request. <br />Request results via REST API can only be retrieved by specifying this identifier.
          examples:
            - iaMiULXA9BktPUu2b_PwTtycCSNe0_wYpPt9muwlEtgL49GDg-kggSktAjtu
      type: object
      required:
        - message
        - order_id
      title: AcceptedResponse
    ClusteredInputsPerMeterAndDatetime:
      properties:
        meter_id:
          type: string
          title: Meter Id
          description: A string that unequivocally identifies a meter of the REC.
          examples:
            - Meter#1
        energy_generated:
          type: number
          title: Energy Generated
          description: PV panels’ generation considered by the algorithm, in kWh.
          examples:
            - 5
        energy_consumed:
          type: number
          title: Energy Consumed
          description: Meter's consumption considered by the algorithm, in kWh.
          examples:
            - 5
        buy_tariff:
          type: number
          title: Buy Tariff
          description: Purchase rate agreed with the retailer that was considered by the algorithm, in €/kWh.
          examples:
            - 5
        sell_tariff:
          type: number
          title: Sell Tariff
          description: Selling rate agreed with the retailer that was considered by the algorithm, in €/kWh.
          examples:
            - 5
        time:
          type: string
          format: time
          title: Time
          description: Time in ISO 8601 format.
          examples:
            - '00:45:00'
        cluster_nr:
          type: integer
          title: Cluster Nr
          description: Unique identification of the cluster to which the data point belongs.
          examples:
            - 1
        cluster_weight:
          type: integer
          title: Cluster Weight
          description: Weight of the cluster and therefore of the datapoint. Corresponds to the number of original raw data days that belong to the cluster.
          examples:
            - 1
      type: object
      required:
        - meter_id
        - energy_generated
        - energy_consumed
        - buy_tariff
        - sell_tariff
        - time
        - cluster_nr
        - cluster_weight
      title: ClusteredInputsPerMeterAndDatetime
    ClusteredLemPrice:
      properties:
        value:
          type: number
          minimum: 0
          title: Value
          description: Local energy market price computed, in €/kWh.
        time:
          type: string
          format: time
          title: Time
          description: Time in ISO 8601 format.
          examples:
            - '00:45:00'
        cluster_nr:
          type: integer
          title: Cluster Nr
          description: Unique identification of the cluster to which the data point belongs.
          examples:
            - 1
        cluster_weight:
          type: integer
          title: Cluster Weight
          description: Weight of the cluster and therefore of the datapoint. Corresponds to the number of original raw data days that belong to the cluster.
          examples:
            - 1
      type: object
      required:
        - value
        - time
        - cluster_nr
        - cluster_weight
      title: ClusteredLemPrice
    ClusteredMILPOutputs:
      properties:
        order_id:
          type: string
          maxLength: 45
          minLength: 45
          title: Order Id
          description: Order identifier for the request.
          examples:
            - iaMiULXA9BktPUu2b_PwTtycCSNe0_wYpPt9muwlEtgL49GDg-kggSktAjtu
        objective_value:
          type: number
          title: Objective Value
          description: Objective value found for the MILP solution.
          examples:
            - 5
        milp_status:
          $ref: '#/components/schemas/MILPStatus'
          description: Indicates if the MILP was optimally solved (by returning "Optimal") or if an issue was raised and a successful solution was not achieved (by returning "Infeasible" or "Unbounded").
        total_rec_cost:
          type: number
          title: Total Rec Cost
          description: Total cost (operation + investment) for the whole community, in €.
          examples:
            - 5
        individual_costs:
          items:
            $ref: '#/components/schemas/IndividualCosts'
          type: array
          title: Individual Costs
          description: Individual total cost (operation + investment) per individual/member, in €.
        meter_costs:
          items:
            $ref: '#/components/schemas/MeterCosts'
          type: array
          title: Meter Costs
          description: Meter total cost (operation + investment) per meter ID, in €.
        meter_investment_outputs:
          items:
            $ref: '#/components/schemas/InvestmentsPerMeter'
          type: array
          title: Meter Investment Outputs
          description: List of meters with the respective non time variable results.
        clustered_meter_operation_inputs:
          items:
            $ref: '#/components/schemas/ClusteredInputsPerMeterAndDatetime'
          type: array
          title: Clustered Meter Operation Inputs
          description: All (clustered) time-varying inputs that were fed into the MILP, per meter ID.
        clustered_meter_operation_outputs:
          items:
            $ref: '#/components/schemas/ClusteredOutputsPerMeterAndDatetime'
          type: array
          title: Clustered Meter Operation Outputs
          description: (Clustered) time-varying outputs calculated in the MILP, per meter ID.
        clustered_self_consumption_tariffs:
          items:
            $ref: '#/components/schemas/ClusteredSelfConsumptionTariffsPerDatetime'
          type: array
          title: Clustered Self Consumption Tariffs
          description: List with the (clustered) self-consumption tariffs considered by the MILP.
        clustered_lem_prices:
          items:
            $ref: '#/components/schemas/ClusteredLemPrice'
          type: array
          title: Clustered Lem Prices
          description: List with the (clustered) local energy market prices computed for the requested horizon.
      type: object
      required:
        - order_id
        - objective_value
        - milp_status
        - total_rec_cost
        - individual_costs
        - meter_costs
        - meter_investment_outputs
        - clustered_meter_operation_inputs
        - clustered_meter_operation_outputs
        - clustered_self_consumption_tariffs
        - clustered_lem_prices
      title: ClusteredMILPOutputs
    ClusteredOutputsPerMeterAndDatetime:
      properties:
        meter_id:
          type: string
          title: Meter Id
          description: A string that unequivocally identifies a meter of the REC.
          examples:
            - Meter#1
        energy_surplus:
          type: number
          title: Energy Surplus
          description: Energy surplus that was sold to the retailer, in kWh.
          examples:
            - 5
        energy_supplied:
          type: number
          title: Energy Supplied
          description: Energy supplied that was bought from the retailer, in kWh.
          examples:
            - 5
        energy_purchased_lem:
          type: number
          title: Energy Purchased Lem
          description: Energy that was purchased in the local energy market (LEM), in kWh.
          examples:
            - 5
        energy_sold_lem:
          type: number
          title: Energy Sold Lem
          description: Energy that was sold in the local energy market (LEM), in kWh.
          examples:
            - 5
        net_load:
          type: number
          title: Net Load
          description: Expected net load registered in the meter, in kWh.
          examples:
            - 5
        bess_energy_charged:
          type: number
          title: Bess Energy Charged
          description: Energy charged in the meter's BESS, in kWh. <br />Sent as 0.0 if the meter does not have storage.
          examples:
            - 5
        bess_energy_discharged:
          type: number
          title: Bess Energy Discharged
          description: Energy discharged in the meter's BESS, in kWh. <br />Sent as 0.0 if the meter does not have storage.
          examples:
            - 5
        bess_energy_content:
          type: number
          title: Bess Energy Content
          description: Energy content of the meter's BESS, at the end of the time interval, in kWh. <br />Sent as 0.0 if the meter does not have storage.
          examples:
            - 5
        time:
          type: string
          format: time
          title: Time
          description: Time in ISO 8601 format.
          examples:
            - '00:45:00'
        cluster_nr:
          type: integer
          title: Cluster Nr
          description: Unique identification of the cluster to which the data point belongs.
          examples:
            - 1
        cluster_weight:
          type: integer
          title: Cluster Weight
          description: Weight of the cluster and therefore of the datapoint. Corresponds to the number of original raw data days that belong to the cluster.
          examples:
            - 1
      type: object
      required:
        - meter_id
        - energy_surplus
        - energy_supplied
        - energy_purchased_lem
        - energy_sold_lem
        - net_load
        - bess_energy_charged
        - bess_energy_discharged
        - bess_energy_content
        - time
        - cluster_nr
        - cluster_weight
      title: ClusteredOutputsPerMeterAndDatetime
    ClusteredSelfConsumptionTariffsPerDatetime:
      properties:
        self_consumption_tariff:
          type: number
          title: Self Consumption Tariff
          description: Tariff applicable to self-consumed energy from the public grid, published by the national regulatory entity for energy services, in €/kWh.
          examples:
            - 5
        time:
          type: string
          format: time
          title: Time
          description: Time in ISO 8601 format.
          examples:
            - '00:45:00'
        cluster_nr:
          type: integer
          title: Cluster Nr
          description: Unique identification of the cluster to which the data point belongs.
          examples:
            - 1
        cluster_weight:
          type: integer
          title: Cluster Weight
          description: Weight of the cluster and therefore of the datapoint. Corresponds to the number of original raw data days that belong to the cluster.
          examples:
            - 1
      type: object
      required:
        - self_consumption_tariff
        - time
        - cluster_nr
        - cluster_weight
      title: ClusteredSelfConsumptionTariffsPerDatetime
    Coordinate:
      properties:
        latitude:
          type: number
          maximum: 90
          minimum: -90
          title: Latitude
        longitude:
          type: number
          maximum: 180
          minimum: -180
          title: Longitude
      type: object
      required:
        - latitude
        - longitude
      title: Coordinate
    DatasetOrigin:
      type: string
      enum:
        - INDATA
        - SEL
      title: DatasetOrigin
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    IndividualCosts:
      properties:
        meter_id:
          type: string
          title: Meter Id
          description: The string that identifies the meter of the REC.
          examples:
            - Meter#1
        individual_cost:
          type: number
          title: Individual Cost
          description: The total cost (operation + investment) for the optimization horizon calculated for the individual/member, without considering the cost for degradation of the BESS, in €. It includes the costs of the shared assets
        individual_savings:
          type: number
          title: Individual Savings
          description: Total savings obtained for that meter ID, in €. <br />This represents the difference between the cost obtained for the individual/member after running the sizing algorithm, considering the possibility to install new PV and/or storage capacities behind-the-meter, and the respective operation cost for the same period, without that possibility, i.e., by simply operating in an optimal fashion the assets that are already installed in the meter.
      type: object
      required:
        - meter_id
        - individual_cost
        - individual_savings
      title: IndividualCosts
    InputsPerMeterAndDatetime:
      properties:
        meter_id:
          type: string
          title: Meter Id
          description: A string that unequivocally identifies a meter of the REC.
          examples:
            - Meter#1
        energy_generated:
          type: number
          title: Energy Generated
          description: PV panels’ generation considered by the algorithm, in kWh.
          examples:
            - 5
        energy_consumed:
          type: number
          title: Energy Consumed
          description: Meter's consumption considered by the algorithm, in kWh.
          examples:
            - 5
        buy_tariff:
          type: number
          title: Buy Tariff
          description: Purchase rate agreed with the retailer that was considered by the algorithm, in €/kWh.
          examples:
            - 5
        sell_tariff:
          type: number
          title: Sell Tariff
          description: Selling rate agreed with the retailer that was considered by the algorithm, in €/kWh.
          examples:
            - 5
        datetime:
          type: string
          format: date-time
          title: Datetime
          description: Datetime in ISO 8601 format.
          examples:
            - '2024-05-16T00:45:00Z'
      type: object
      required:
        - meter_id
        - energy_generated
        - energy_consumed
        - buy_tariff
        - sell_tariff
        - datetime
      title: InputsPerMeterAndDatetime
    InvestmentsPerMeter:
      properties:
        meter_id:
          type: string
          title: Meter Id
          description: The string that identifies the meter of the REC.
          examples:
            - Meter#1
        individual_cost:
          type: number
          title: Individual Cost
          description: The total cost (operation + investment) for the optimization horizon calculated for the meter ID, without considering the cost for degradation of the BESS, in €.
        individual_savings:
          type: number
          title: Individual Savings
          description: Total savings obtained for that meter ID, in €. <br />This represents the difference between the cost obtained for the meter after running the sizing algorithm, considering the possibility to install new PV and/or storage capacities behind-the-meter, and the respective operation cost for the same period, without that possibility, i.e., by simply operating in an optimal fashion the assets that are already installed in the meter.
        installed_pv_power:
          type: number
          title: Installed Pv Power
          description: Newly installed PV power in the meter, in kW.
        installed_storage_capacity:
          type: number
          title: Installed Storage Capacity
          description: Newly installed storage capacity in the meter, in kWh.
        contracted_power:
          type: number
          title: Contracted Power
          description: 'Resulting Contracted Power for the meter, in kW. <br />Note: This value can be equal to or greater than the initial Contracted Power of the meter with the respective retailer. Any change to this value comes from newly installed capacities which are forecasted to require an additional power flow capacity at the meter.'
        total_pv:
          type: number
          title: Total Pv
          description: Total PV power in the meter, that equals the pre-installed capacity plus the newly installed capacity, in kW.
        total_storage:
          type: number
          title: Total Storage
          description: Total storage capacity in the meter, that equals the pre-installed capacity plus the newly installed capacity, in kWh.
        retailer_exchange_costs:
          type: number
          title: Retailer Exchange Costs
          description: The total cost of buying and selling energy from/to the retailer, in €.
        sc_tariffs_costs:
          type: number
          title: Sc Tariffs Costs
          description: The total grid access costs when self-consuming in the REC, in €.
      type: object
      required:
        - meter_id
        - individual_cost
        - individual_savings
        - installed_pv_power
        - installed_storage_capacity
        - contracted_power
        - total_pv
        - total_storage
        - retailer_exchange_costs
        - sc_tariffs_costs
      title: InvestmentsPerMeter
    LemPrice:
      properties:
        value:
          type: number
          minimum: 0
          title: Value
          description: Local energy market price computed, in €/kWh.
        datetime:
          type: string
          format: date-time
          title: Datetime
          description: Datetime in ISO 8601 format.
          examples:
            - '2024-05-16T00:45:00Z'
      type: object
      required:
        - value
        - datetime
      title: LemPrice
    MILPOutputs:
      properties:
        order_id:
          type: string
          maxLength: 45
          minLength: 45
          title: Order Id
          description: Order identifier for the request.
          examples:
            - iaMiULXA9BktPUu2b_PwTtycCSNe0_wYpPt9muwlEtgL49GDg-kggSktAjtu
        objective_value:
          type: number
          title: Objective Value
          description: Objective value found for the MILP solution.
          examples:
            - 5
        milp_status:
          $ref: '#/components/schemas/MILPStatus'
          description: Indicates if the MILP was optimally solved (by returning "Optimal") or if an issue was raised and a successful solution was not achieved (by returning "Infeasible" or "Unbounded").
        total_rec_cost:
          type: number
          title: Total Rec Cost
          description: Total cost (operation + investment) for the whole community, in €.
          examples:
            - 5
        individual_costs:
          items:
            $ref: '#/components/schemas/IndividualCosts'
          type: array
          title: Individual Costs
          description: Individual total cost (operation + investment) per individual/member, in €.
        meter_costs:
          items:
            $ref: '#/components/schemas/MeterCosts'
          type: array
          title: Meter Costs
          description: Meter total cost (operation + investment) per meter ID, in €.
        meter_investment_outputs:
          items:
            $ref: '#/components/schemas/InvestmentsPerMeter'
          type: array
          title: Meter Investment Outputs
          description: List of meters with the respective non time variable results.
        meter_operation_inputs:
          items:
            $ref: '#/components/schemas/InputsPerMeterAndDatetime'
          type: array
          title: Meter Operation Inputs
          description: All time-varying inputs that were fed into the MILP, per meter ID.
        meter_operation_outputs:
          items:
            $ref: '#/components/schemas/OutputsPerMeterAndDatetime'
          type: array
          title: Meter Operation Outputs
          description: Time-varying outputs calculated in the MILP, per meter ID.
        self_consumption_tariffs:
          items:
            $ref: '#/components/schemas/SelfConsumptionTariffsPerDatetime'
          type: array
          title: Self Consumption Tariffs
          description: List with the self-consumption tariffs considered by the MILP.
        lem_prices:
          items:
            $ref: '#/components/schemas/LemPrice'
          type: array
          title: Lem Prices
          description: List with the local energy market prices computed for the requested horizon.
      type: object
      required:
        - order_id
        - objective_value
        - milp_status
        - total_rec_cost
        - individual_costs
        - meter_costs
        - meter_investment_outputs
        - meter_operation_inputs
        - meter_operation_outputs
        - self_consumption_tariffs
        - lem_prices
      title: MILPOutputs
    MILPStatus:
      type: string
      enum:
        - Optimal
        - Unbounded
        - Infeasible
      title: MILPStatus
    MeterByArea:
      properties:
        dataset_origin:
          $ref: '#/components/schemas/DatasetOrigin'
          description: |-
            Dataset origin from which the meter IDs' data is to be retrieved from. Two options are provided:
             - SEL (Smart Energy Lab)
             - INDATA
          default: INDATA
          examples:
            - INDATA
        rec_location:
          anyOf:
            - $ref: '#/components/schemas/Coordinate'
            - prefixItems:
                - type: number
                - type: number
              type: array
              maxItems: 2
              minItems: 2
            - type: string
            - type: 'null'
          title: Rec Location
          description: Latitude and Longitude of the REC.
          default:
            latitude: 0
            longitude: 0
        radius:
          anyOf:
            - type: integer
              minimum: 0
            - type: 'null'
          title: Radius
          description: Radius, in km, that gives origin to a circle with the center in Latitude and Longitude. Meters within this circle will be retrieved from dataspace to form the REC.
          default: 4
      type: object
      title: MeterByArea
    MeterCosts:
      properties:
        meter_id:
          type: string
          title: Meter Id
          description: The string that identifies the meter of the REC.
          examples:
            - Meter#1
        meter_cost:
          type: number
          title: Meter Cost
          description: The total cost (operation + investment) for the optimization horizon calculated for the meter ID, without considering the cost for degradation of the BESS, in €.
        meter_savings:
          type: number
          title: Meter Savings
          description: Total savings obtained for that meter ID, in €. <br />This represents the difference between the cost obtained for the meter after running the sizing algorithm, considering the possibility to install new PV and/or storage capacities behind-the-meter, and the respective operation cost for the same period, without that possibility, i.e., by simply operating in an optimal fashion the assets that are already installed in the meter.
      type: object
      required:
        - meter_id
        - meter_cost
        - meter_savings
      title: MeterCosts
    MeterIDNotFound:
      properties:
        message:
          type: string
          title: Message
          examples:
            - Data for one or more meter IDs not found on registry system.
        order_id:
          type: string
          maxLength: 45
          minLength: 45
          title: Order Id
          description: Order identifier for the request.
          examples:
            - iaMiULXA9BktPUu2b_PwTtycCSNe0_wYpPt9muwlEtgL49GDg-kggSktAjtu
      type: object
      required:
        - message
        - order_id
      title: MeterIDNotFound
    MeterIDs:
      properties:
        meter_ids:
          items:
            type: string
          type: array
          title: Meter Ids
          description: List with found meter ids within the area defined by the user.
          examples:
            - - Meter#1
              - Meter#2
      type: object
      required:
        - meter_ids
      title: MeterIDs
    OrderNotFound:
      properties:
        message:
          type: string
          title: Message
          examples:
            - Order not found.
        order_id:
          type: string
          maxLength: 45
          minLength: 45
          title: Order Id
          description: Order identifier for the request.
          examples:
            - iaMiULXA9BktPUu2b_PwTtycCSNe0_wYpPt9muwlEtgL49GDg-kggSktAjtu
      type: object
      required:
        - message
        - order_id
      title: OrderNotFound
    OrderNotProcessed:
      properties:
        message:
          type: string
          title: Message
          examples:
            - Order found, but not yet processed. Please try again later.
        order_id:
          type: string
          maxLength: 45
          minLength: 45
          title: Order Id
          description: Order identifier for the request.
          examples:
            - iaMiULXA9BktPUu2b_PwTtycCSNe0_wYpPt9muwlEtgL49GDg-kggSktAjtu
      type: object
      required:
        - message
        - order_id
      title: OrderNotProcessed
    OutputsPerMeterAndDatetime:
      properties:
        meter_id:
          type: string
          title: Meter Id
          description: A string that unequivocally identifies a meter of the REC.
          examples:
            - Meter#1
        energy_surplus:
          type: number
          title: Energy Surplus
          description: Energy surplus that was sold to the retailer, in kWh.
          examples:
            - 5
        energy_supplied:
          type: number
          title: Energy Supplied
          description: Energy supplied that was bought from the retailer, in kWh.
          examples:
            - 5
        energy_purchased_lem:
          type: number
          title: Energy Purchased Lem
          description: Energy that was purchased in the local energy market (LEM), in kWh.
          examples:
            - 5
        energy_sold_lem:
          type: number
          title: Energy Sold Lem
          description: Energy that was sold in the local energy market (LEM), in kWh.
          examples:
            - 5
        net_load:
          type: number
          title: Net Load
          description: Expected net load registered in the meter, in kWh.
          examples:
            - 5
        bess_energy_charged:
          type: number
          title: Bess Energy Charged
          description: Energy charged in the meter's BESS, in kWh. <br />Sent as 0.0 if the meter does not have storage.
          examples:
            - 5
        bess_energy_discharged:
          type: number
          title: Bess Energy Discharged
          description: Energy discharged in the meter's BESS, in kWh. <br />Sent as 0.0 if the meter does not have storage.
          examples:
            - 5
        bess_energy_content:
          type: number
          title: Bess Energy Content
          description: Energy content of the meter's BESS, at the end of the time interval, in kWh. <br />Sent as 0.0 if the meter does not have storage.
          examples:
            - 5
        datetime:
          type: string
          format: date-time
          title: Datetime
          description: Datetime in ISO 8601 format.
          examples:
            - '2024-05-16T00:45:00Z'
      type: object
      required:
        - meter_id
        - energy_surplus
        - energy_supplied
        - energy_purchased_lem
        - energy_sold_lem
        - net_load
        - bess_energy_charged
        - bess_energy_discharged
        - bess_energy_content
        - datetime
      title: OutputsPerMeterAndDatetime
    Ownership:
      properties:
        shared_meter_id:
          type: string
          title: Shared Meter Id
          description: The string that unequivocally identifies the meter ID that will be shared.
          examples:
            - Meter#3
        meter_id:
          type: string
          title: Meter Id
          description: The string that unequivocally identifies the meter ID that has ownership over the new shared meter ID.
          examples:
            - Meter#1
        percentage:
          type: number
          maximum: 100
          minimum: 0
          title: Percentage
          description: Ownership percentage that the meter ID owner will have over the new shared meter.
      type: object
      required:
        - shared_meter_id
        - meter_id
        - percentage
      title: Ownership
    SelfConsumptionTariffsPerDatetime:
      properties:
        self_consumption_tariff:
          type: number
          title: Self Consumption Tariff
          description: Tariff applicable to self-consumed energy from the public grid, published by the national regulatory entity for energy services, in €/kWh.
          examples:
            - 5
        datetime:
          type: string
          format: date-time
          title: Datetime
          description: Datetime in ISO 8601 format.
          examples:
            - '2024-05-16T00:45:00Z'
      type: object
      required:
        - self_consumption_tariff
        - datetime
      title: SelfConsumptionTariffsPerDatetime
    SizingInputs:
      properties:
        start_datetime:
          type: string
          format: date-time
          title: Start Datetime
          description: Start date for the sizing horizon (included in it) in ISO 8601 format.
          examples:
            - '2024-05-16T00:00:00Z'
        end_datetime:
          type: string
          format: date-time
          title: End Datetime
          description: End date for the sizing horizon (included in it) in ISO 8601 format.
          examples:
            - '2024-05-16T00:45:00Z'
        dataset_origin:
          $ref: '#/components/schemas/DatasetOrigin'
          description: |-
            Dataset origin from which the meter IDs' data is to be retrieved from. Two options are provided:
             - SEL (Smart Energy Lab)
             - INDATA
          examples:
            - SEL
        nr_representative_days:
          type: integer
          minimum: 0
          title: Nr Representative Days
          description: 'If the user defines a number > 0, a clustering of the input data is performed prior to the MILP run and sizing is performed over the number of representative days here defined. If the user defines this number as 0, no clustering is performed.Note: If the user defines a number of representative days greater than the number of days in the historical data sets, clustering is not performed.'
        meter_ids:
          items:
            type: string
          type: array
          uniqueItems: true
          title: Meter Ids
          description: An array of strings that unequivocally identifies the meters to be included in the REC. <br />All registered assets (i.e., meter ids) belonging to the meters listed, will be considered when running the algorithm.
          examples:
            - - Meter#1
              - Meter#2
        sizing_params_by_meter:
          items:
            $ref: '#/components/schemas/SizingParametersByMeter'
          type: array
          title: Sizing Params By Meter
          description: List with parameterization for potentially new installed PV and/or storage capacities behind the meter IDs of the REC.
      type: object
      required:
        - start_datetime
        - end_datetime
        - dataset_origin
        - nr_representative_days
        - meter_ids
        - sizing_params_by_meter
      title: SizingInputs
    SizingInputsWithShared:
      properties:
        start_datetime:
          type: string
          format: date-time
          title: Start Datetime
          description: Start date for the sizing horizon (included in it) in ISO 8601 format.
          examples:
            - '2024-05-16T00:00:00Z'
        end_datetime:
          type: string
          format: date-time
          title: End Datetime
          description: End date for the sizing horizon (included in it) in ISO 8601 format.
          examples:
            - '2024-05-16T00:45:00Z'
        dataset_origin:
          $ref: '#/components/schemas/DatasetOrigin'
          description: |-
            Dataset origin from which the meter IDs' data is to be retrieved from. Two options are provided:
             - SEL (Smart Energy Lab)
             - INDATA
          examples:
            - SEL
        nr_representative_days:
          type: integer
          minimum: 0
          title: Nr Representative Days
          description: 'If the user defines a number > 0, a clustering of the input data is performed prior to the MILP run and sizing is performed over the number of representative days here defined. If the user defines this number as 0, no clustering is performed.Note: If the user defines a number of representative days greater than the number of days in the historical data sets, clustering is not performed.'
        meter_ids:
          items:
            type: string
          type: array
          uniqueItems: true
          title: Meter Ids
          description: An array of strings that unequivocally identifies the meters to be included in the REC. <br />All registered assets (i.e., meter ids) belonging to the meters listed, will be considered when running the algorithm.
          examples:
            - - Meter#1
              - Meter#2
        sizing_params_by_meter:
          items:
            $ref: '#/components/schemas/SizingParametersByMeter'
          type: array
          title: Sizing Params By Meter
          description: List with parameterization for potentially new installed PV and/or storage capacities behind the meter IDs of the REC.
        shared_meter_ids:
          items:
            type: string
          type: array
          uniqueItems: true
          title: Shared Meter Ids
          description: An array of strings that unequivocally identifies the shared meters to be included in the REC. <br />All registered assets (i.e., meter ids) belonging to the meters listed, will be considered when running the algorithm.
          examples:
            - - Meter#3
              - Meter#4
        ownerships:
          items:
            $ref: '#/components/schemas/Ownership'
          type: array
          title: Ownerships
          description: 'List of ownership percentages of meter ID responsible for the new shared meter. Note: meter ID that don''t have a percentage over the new meter are not required to be defined on this list, but the sum of all ownerships must equal 100%.'
        sizing_params_for_shared_meter:
          items:
            $ref: '#/components/schemas/SizingParametersByMeter'
          type: array
          title: Sizing Params For Shared Meter
          description: List with parameterization for potentially new installed PV and/or storage capacities behind a new shared meter ID within the REC.
      type: object
      required:
        - start_datetime
        - end_datetime
        - dataset_origin
        - nr_representative_days
        - meter_ids
        - sizing_params_by_meter
        - shared_meter_ids
        - ownerships
        - sizing_params_for_shared_meter
      title: SizingInputsWithShared
    SizingParametersByMeter:
      properties:
        power_energy_ratio:
          type: number
          title: Power Energy Ratio
          description: Power/energy [kW/kWh] ratio of the newly installed storage capacity. E.g., if the asset is to be able to charge/discharge in 1h, this ratio should be sent as 1.0, for 30 minutes this ratio should be 0.5 and for 2h this ratio should be 2.0.
          examples:
            - 1
        minimum_new_pv_power:
          type: number
          title: Minimum New Pv Power
          description: 'Minimum newly installed PV capacity, in kW. <br />Note: if no new PV capacity is to be installed set this value to 0.0.'
          examples:
            - 0
        maximum_new_pv_power:
          type: number
          title: Maximum New Pv Power
          description: 'Maximum newly installed PV capacity, in kW. <br />Note: if no new PV capacity is to be installed set this value to 0.0.'
          examples:
            - 10
        minimum_new_storage_capacity:
          type: number
          title: Minimum New Storage Capacity
          description: 'Minimum newly installed storage capacity, in kWh. <br />Note: if no new storage capacity is to be installed set this value to 0.0.'
          examples:
            - 0
        maximum_new_storage_capacity:
          type: number
          title: Maximum New Storage Capacity
          description: 'Maximum newly installed storage capacity, in kWh. <br />Note: if no new storage capacity is to be installed set this value to 0.0.'
          examples:
            - 10
        l_gic:
          type: number
          title: L Gic
          description: Cost of installing new PV, in €/kW. <br />
          examples:
            - 10
        l_bic:
          type: number
          title: L Bic
          description: Cost of installing new battery capacity, in €/kWh. <br />
          examples:
            - 10
        soc_min:
          type: number
          title: Soc Min
          description: Minimum state-of-charge of the battery to be installed, in %. <br />
          examples:
            - 10
        soc_max:
          type: number
          title: Soc Max
          description: Maximum state-of-charge of the battery to be installed, in %. <br />
          examples:
            - 10
        eff_bc:
          type: number
          title: Eff Bc
          description: Charging efficiency of the battery to be installed, in %. <br />
          examples:
            - 10
        eff_bd:
          type: number
          title: Eff Bd
          description: Discharging efficiency of the battery to be installed, in %. <br />
          examples:
            - 10
        deg_cost:
          type: number
          title: Deg Cost
          description: 'Degradation cost of the battery to be installed, in %. <br />Note: if no new storage capacity is to be installed set this value to 0.0.'
          examples:
            - 10
        meter_id:
          type: string
          title: Meter Id
          description: The string that unequivocally identifies the meter ID of the REC.
          examples:
            - Meter#1
      type: object
      required:
        - power_energy_ratio
        - minimum_new_pv_power
        - maximum_new_pv_power
        - minimum_new_storage_capacity
        - maximum_new_storage_capacity
        - l_gic
        - l_bic
        - soc_min
        - soc_max
        - eff_bc
        - eff_bd
        - deg_cost
        - meter_id
      title: SizingParametersByMeter
    TimeseriesDataNotFound:
      properties:
        message:
          type: string
          title: Message
          examples:
            - One or more data point for one or more meter IDs not found on registry system.
        missing_data_points:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          title: Missing Data Points
          description: Lists of missing data points' datetime per meter ID.
          examples:
            - Meter#1:
                - '2024-05-16T00:00:00Z'
                - '2024-05-16T00:15:00Z'
        order_id:
          type: string
          maxLength: 45
          minLength: 45
          title: Order Id
          description: Order identifier for the request.
          examples:
            - iaMiULXA9BktPUu2b_PwTtycCSNe0_wYpPt9muwlEtgL49GDg-kggSktAjtu
      type: object
      required:
        - message
        - missing_data_points
        - order_id
      title: TimeseriesDataNotFound
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError